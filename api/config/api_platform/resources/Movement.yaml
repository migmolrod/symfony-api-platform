App\Entity\Movement:
  attributes:
    normalization_context:
      groups: [ movement_read ]
  collectionOperations:
    post:
      method: POST
      security: is_granted("MOVEMENT_CREATE")
      denormalization_context:
        groups: [ movement_create ]
  itemOperations:
    get:
      method: GET
      security: is_granted("MOVEMENT_READ", object)
    put:
      method: PUT
      security: is_granted("MOVEMENT_UPDATE", object)
      denormalization_context:
        groups: [ movement_update ]
    delete:
      method: DELETE
      security: is_granted("MOVEMENT_DELETE", object)
    uploadFile:
      method: POST
      path: /movements/{id}/file
      controller: App\Api\Action\Movement\UploadFile
      deserialize: false
      openapi_context:
          summary: Upload and attach a file to a movement
          requestBody:
            content:
              multipart/form-data:
                schema:
                  type: object
                  properties:
                    file:
                      type: string
                      format: binary
